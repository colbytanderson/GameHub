{"version":3,"sources":["constants.js","utility.js","views/Navbar.js","views/HangmanLobby.js","views/Game.js","views/Profile.js","views/Login.js","views/Register.js","views/Landing.js","views/Games.js","App.js","index.js"],"names":["serverEndpoint","registerEndpoint","loginEndpoint","hangmanEndpoint","finishedHangmanGamesEndpoint","getUsersHangmanPointsEndpoint","userInformationEndpoint","alphabet","split","login","username","password","credentials","axios","post","then","response","localStorage","setItem","data","access","renderLandingPage","message","success","catch","error","console","log","history","push","logout","renderGamesPage","getConfig","accessToken","getItem","headers","renderHangmanGamePage","hangmanGame","pathname","state","displayGameID","game_id","displayWordAttempt","word_attempt","map","val","join","displayHangmanLobbyDescription","item","wrong_moves","getUserInformation","get","guessHangmanLetter","letter","getGuessLetterEndpoint","err","renderHangmanLobbyPage","displayOutcomeMessage","includes","withRouter","props","ConditionalLoggedIn","style","margin","fontSize","align","span","onClick","offset","Option","Select","HangmanLobby","useState","hangmanPoints","setPoints","currentGames","setCurrentGames","pastGames","setPastGames","difficultyLevel","setDifficultyLevel","useEffect","textAlign","padding","border","borderRadius","itemLayout","dataSource","renderItem","Item","actions","Meta","title","description","showSearch","width","placeholder","optionFilterProp","onChange","value","filterOption","input","option","children","toLowerCase","indexOf","difficulty_level","createHangmanGame","word","Game","location","setData","guess","setGuess","available","guessedLetters","li","filter","el","availableLetters","guessed_letters","finished","gutter","className","index","marginTop","status","subTitle","extra","type","key","Profile","name","initialValues","remember","onFinish","values","rules","required","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","htmlType","switch","Register","register","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","Landing","loginShowing","setLoginShowing","switchView","link","Games","setUsername","games","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ba39fbd.chunk.js","sourcesContent":["const serverEndpoint = 'http://127.0.0.1:8000/'\nexport const registerEndpoint = `${serverEndpoint}auth/users/`\nexport const loginEndpoint = `${serverEndpoint}auth/jwt/create/`\nexport const hangmanEndpoint = `${serverEndpoint}hangman/`\nexport const finishedHangmanGamesEndpoint = `${serverEndpoint}getFinished/`\nexport const getUsersHangmanPointsEndpoint = `${serverEndpoint}getPoints/`\nexport const userInformationEndpoint = `${serverEndpoint}auth/users/me/`\n\nexport const landingRoute = '/'\nexport const gamesRoute = '/games'\nexport const hangmanLobbyRoute = '/hangmanLobby'\nexport const hangmanGameRoute = '/game'\nexport const profileRoute = '/profile'\n\nexport const alphabet = 'abcdefghijklmnopqrstuvwxyz'.split('')","import axios from 'axios'\n\nimport { message } from 'antd';\n\nimport { registerEndpoint, loginEndpoint,\n        hangmanEndpoint, finishedHangmanGamesEndpoint,\n        getUsersHangmanPointsEndpoint,\n        userInformationEndpoint,\n        landingRoute, gamesRoute,\n        hangmanGameRoute, alphabet, hangmanLobbyRoute } from './constants'\n\nconst getGuessLetterEndpoint = (game_id) => {\n    return `${hangmanEndpoint}${game_id}/guessLetter`\n}\n\nexport const register = (username, password) => {\n    const credentials = {\n        username: username,\n        password: password\n    }\n    return axios.post(registerEndpoint, credentials)\n}\n\nexport const login = (username, password) => {\n    const credentials = {\n        username: username,\n        password: password\n    }\n    axios.post(loginEndpoint, credentials).then(response => {\n        localStorage.setItem('accessToken', response.data.access)\n        localStorage.setItem('isLoggedIn', true)\n        renderLandingPage()\n        message.success('Successfully logged in!')\n    }).catch(error => console.log(error))\n}\n\nexport const isLoggedIn = () => {\n    if (localStorage.getItem('accessToken') === '') return false\n    return true\n}\n\nexport const renderLandingPage = (history) => {\n    history.push(landingRoute)\n}\n\nexport const logout = () => {\n    localStorage.setItem('accessToken', '')\n    renderLandingPage()\n}\n\nexport const renderGamesPage = (history) => {\n    history.push(gamesRoute)\n}\n\nconst getConfig = () => {\n    const accessToken = localStorage.getItem('accessToken')\n    return {\n        headers: {\n            'Authorization': `JWT ${accessToken}`\n        }\n    }\n}\n\nexport const getUnfinishedHangmanGames = () => {\n    axios.get(hangmanEndpoint, getConfig()).then(response => {\n        return response.data\n    }).catch(error => console.log(error))\n}\n\nexport const getFinishedHangmanGames = () => {\n    axios.get(finishedHangmanGamesEndpoint, getConfig()).then(response => {\n        return response.data\n        }).catch(error => console.log(error))\n}\n\nexport const getUsersHangmanPoints = () => {\n    axios.get(getUsersHangmanPointsEndpoint, getConfig()).then(response => {\n        return response.data\n    }).catch(error => console.log(error))\n}\n\n\nexport const renderHangmanGamePage = (history, hangmanGame) => {\n    history.push({\n        pathname: hangmanGameRoute,\n        state: {\n            data: hangmanGame\n        }\n    })\n}\n\nexport const createHangmanGame = (difficultyLevel) => {\n    axios.post(hangmanEndpoint, {\n        difficulty_level: difficultyLevel\n    }, getConfig()).then(response => {\n        renderHangmanGamePage(response.data)\n    }).catch(error => console.log(error))\n}\n\nexport const outcomeOfHangmanGame = (word_attempt) => {\n    if (word_attempt.includes('')) {\n        return 'LOST'\n    } else {\n        return 'WON'\n    }\n}\n\nexport const displayGameID = (game_id) => {\n    return \"Game \" + game_id\n}\n\nexport const displayWordAttempt = (word_attempt) => {\n    const pre = word_attempt.map(val => {\n      if (val === '')\n        return '_'\n      else\n        return val\n    })\n    return pre.join('   ')\n  }\n\nexport const displayHangmanLobbyDescription = (item) => {\n    const lives = 6 - item.wrong_moves\n    const progress = displayWordAttempt(item.word_attempt)\n    return 'Lives Left: ' + lives + ', Progress: ' + progress\n}\n\nexport const displayCorrectWord = (word) => {\n    return 'word: ' + word\n}\n\nexport const getUserInformation = () => {\n    axios.get(userInformationEndpoint, getConfig()).then(response => {\n        return response.data\n    }).catch(error => console.log(error))\n}\n\nexport const guessHangmanLetter = (game_id, letter) => {\n    axios.post(getGuessLetterEndpoint(game_id), {letter: letter}, getConfig()).then(response => {\n        return response.data\n    }).catch(err => console.log(err))\n}\n\nexport const renderHangmanLobbyPage = (history) => {\n    history.push(hangmanLobbyRoute)\n}\n\nexport const displayOutcomeOfHangmanGame = (word_attempt) => {\n    if (word_attempt.includes('')) {\n        return 'error'\n    } else {\n        return 'success'\n    }\n}\n\nexport const displayOutcomeMessage = (word_attempt) => {\n    if (word_attempt.includes('')) {\n      return 'You should read a dictionary :('\n    } else {\n      return 'Congratulations...nerd'\n    }\n  }\n\nexport const availableLetters = (guessedLetters) => {\n    const li = guessedLetters.split('')\n    return alphabet.filter( ( el ) => !li.includes( el ) );\n}\n\nexport const displayGuessedLetters = (guessed_letters) => {\n    return guessed_letters.split('').join(', ')\n  }","import React from 'react'\nimport { withRouter } from 'react-router-dom';\n\nimport {Row, Col} from 'antd'\n\nimport { isLoggedIn, logout, renderGamesPage } from '../utility'\n\nfunction Navbar(props) {\n\n    const ConditionalLoggedIn = (props) => {\n        if (isLoggedIn()) {\n            return (\n                <div style = {{\n                    margin: '1rem',\n                    fontSize: '15px'\n                    }}>\n                    <Row align='middle'>\n      <Col span={8}><a onClick = {renderGamesPage(props.history)}>Games</a></Col>\n      <Col span={2} offset={14}>\n      <a onClick = {logout} >Logout</a>\n      </Col>\n    </Row>\n                \n                \n            </div>\n            )\n        }\n        else \n        return (\n            <div>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <ConditionalLoggedIn> </ConditionalLoggedIn>\n        </div>\n    )\n}\n\nexport default withRouter(Navbar)","import React, {useState, useEffect} from 'react'\n\nimport {List,Button, Select} from 'antd'\n\nimport { getUnfinishedHangmanGames, getFinishedHangmanGames,\n        getUsersHangmanPoints, renderHangmanGamePage,\n        createHangmanGame, outcomeOfHangmanGame,\n        displayGameID, displayHangmanLobbyDescription,\n        displayCorrectWord } from '../utility'\n\nconst { Option } = Select;\n\nfunction HangmanLobby(props) {\n    const [hangmanPoints, setPoints] = useState(0)\n    const [currentGames, setCurrentGames] = useState()\n    const [pastGames, setPastGames] = useState()\n    const [difficultyLevel, setDifficultyLevel] = useState()\n    function onChange(value) {\n        setDifficultyLevel(value)\n      }\n      \n    useEffect(() => {\n        getUnfinishedHangmanGames().then(data => setCurrentGames(data))\n        getFinishedHangmanGames().then(data => setPastGames(data))\n        getUsersHangmanPoints().then(data => setPoints(data))\n    },[])\n\n    return (\n        <div>\n            <h1 style = {{textAlign: 'center'}}>Play Hangman</h1>\n            <h3 style= {{textAlign: 'center'}}>{'Points Earned: ' + hangmanPoints}</h3>\n            <div style= {{textAlign: 'center'}}>\n            </div>\n            <h2 style= {{textAlign: 'center'}}>Current Games</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {currentGames}\n                renderItem = {(item) => (\n                    <List.Item\n                    actions={[\n                        <Button onClick={() => renderHangmanGamePage(props.history, item)}>Continue Playing</Button>, \n                ]}\n                    >\n                        <List.Item.Meta\n                            title = {<p>{displayGameID(item.game_id)}</p>}\n                            description = {<p>{displayHangmanLobbyDescription(item)}</p>}\n                        />\n                    </List.Item>\n                )}\n            >\n\n            </List>\n            <div style= {{textAlign: 'center'}}>\n            <Select\n    showSearch\n    style={{ width: 200 }}\n    placeholder=\"Choose Difficulty Level\"\n    optionFilterProp=\"children\"\n    onChange={onChange}\n    filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  >\n        <Option value='1'>1</Option>\n        <Option value='2'>2</Option>\n        <Option value='3'>3</Option>\n  </Select>\n  <Button onClick={() => createHangmanGame(difficultyLevel)}>Start New Singleplayer Game</Button>\n  <p>Multiplayer Functionality Coming Soon!</p>\n  </div>\n            <h2 style= {{textAlign: 'center'}}>Past Games</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {pastGames}\n                renderItem = {(item) => (\n                    <List.Item\n                    >\n                        <List.Item.Meta\n                            title = {<p>{displayGameID(item.game_id)}</p>}\n                            description = {<p>{displayCorrectWord(item.word)}</p>}\n                        />\n                        <p>{outcomeOfHangmanGame(item.word_attempt)}</p>\n                    </List.Item>\n                )}\n            >\n            </List>\n        </div>\n    )\n}\nexport default HangmanLobby","import React, {useState} from 'react'\n\nimport { Select, Row, Col, Result, Button } from 'antd';\n\nimport { guessHangmanLetter, renderHangmanLobbyPage,\n          displayOutcomeOfHangmanGame, displayOutcomeMessage,\n          availableLetters, displayWordAttempt,\n          displayGuessedLetters, \n          renderGamesPage} from '../utility'\n\nconst { Option } = Select;\n\nfunction Game(props) {\n    function onChange(value) {\n        setGuess(value)\n      }\n    const [data, setData] = useState(props.location.state.data)\n    const [guess, setGuess] = useState()\n    let available = availableLetters(data.guessed_letters)\n    const submitGuess = () => {\n      const game_id = props.location.state.data.game_id\n      const letter = guess\n      guessHangmanLetter(game_id, letter).then(data => setData(data))\n    }\n    if (data.finished === 'no') {\n    return (\n        <div>\n            <h1 style = {{textAlign: 'center'}}>{'Game ' + data.game_id}</h1>\n            <div style = {{textAlign: 'center'}}>\n            <Row gutter={16}>\n            <Col className=\"gutter-row\" span={4} offset={8}>\n            <p>{'Guessed Letters: ' + displayGuessedLetters(data.guessed_letters)}</p>\n            </Col>\n            <Col className=\"gutter-row\" span={4}>\n            <h4>{'Lives Left: ' + (6 - data.wrong_moves)}</h4>\n            </Col>\n            </Row>\n            </div>\n            <h1 style = {{textAlign: 'center'}}>{displayWordAttempt(data.word_attempt)}</h1>\n            <div style = {{textAlign: 'center'}}>\n            <Select\n    showSearch\n    style={{ width: 200 }}\n    placeholder=\"Guess a Letter\"\n    optionFilterProp=\"children\"\n    onChange={onChange}\n    filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  >\n    {available.map((val, index) => {\n        return (\n            <Option value={val}>{val}</Option>\n        )\n    })}\n  </Select>\n  <Button onClick={submitGuess}>Submit Guess</Button>\n  <div style = {{textAlign: 'center', marginTop: '30px'}}>\n  <Button onClick={renderHangmanLobbyPage(props.history)}>Back to Hangman Lobby</Button>\n  </div>\n        </div>\n        </div>\n    )}\n\n    else {\n      return (\n      <Result\n    status={displayOutcomeOfHangmanGame(data.word_attempt)}\n    title={displayOutcomeMessage(data.word_attempt)}\n    subTitle=\"\"\n    extra={[\n      <Button onClick={renderHangmanLobbyPage(props.history)} type=\"primary\" key=\"console\">\n        Return To Lobby\n      </Button>,\n      <Button onClick={() => renderGamesPage(props.history)}>\n        Browse Other Games\n      </Button>\n    ]}\n  ></Result>\n      )\n    }\n}\n\nexport default Game","import React, {useContext} from 'react';\n\nimport {Button} from 'antd'\n\n\nfunction Profile() {\n    const accessToken = localStorage.getItem('accessToken')\n\n    const seeAccess = () => {\n        console.log(accessToken)\n    }\n\n    return (\n        <div>\n            <Button onClick = {seeAccess}> see Access </Button>\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Checkbox} from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\n\nimport { login } from '../utility'\n\nfunction Login(props) {\n\n  const renderRegisterComponent = () => {\n    props.switch()\n}\n\n    const onLogin = (values) => {\n        login(values.username, values.password)\n      }\n\n    return (\n        <div style = {{margin: '100px 40% 100px'}}>\n        <h1>Login to GameHub</h1>\n        <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onLogin}\n        >\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Username!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        Or <a onClick={renderRegisterComponent(props.history)}>register now!</a>\n      </Form.Item>\n    </Form>\n    </div>\n    )\n}\n\nexport default withRouter(Login)","import React from 'react'\n\nimport {Form, Input, Button} from 'antd'\nimport { UserOutlined, LockOutlined} from '@ant-design/icons';\n\nimport { register, login } from '../utility'\n\nfunction Register(props) {\n\n    const renderLoginComponent = () => {\n        props.switch()\n    }\n\n    const onRegister = (values) => {\n        const {username, password} = values\n        register(username, password).then(() => {\n            login(username, password)\n        }).catch(error => console.log(error))\n    }\n    \n    return (\n        <div style = {{margin: '100px 40% 100px'}}>\n            <h1> Registration </h1>\n            <Form\n            name=\"normal_register\"\n            className=\"register-form\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onRegister}>\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'A username is required',\n                    },\n                    ]}\n                 >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Create Username\" />\n                </Form.Item>\n                <Form.Item\n                    name = \"password\"\n                    hasFeedback\n                    rules = {[\n                    {\n                        required: true,\n                        message: 'A password is required'\n                    },\n                    ]}\n                >\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" type ='password'/>\n                </Form.Item>\n                <Form.Item\n                    name = \"confirmpassword\"\n                    dependencies = {['password']}\n                    hasFeedback\n                    rules = {[\n                    {\n                        required: true,\n                        message: 'Re-enter your password'\n                    },\n                    ({getFieldValue}) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve()\n                            }\n                            return Promise.reject('Error: Passwords do not match')\n                        }\n                    })\n                    ]}\n                >\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" type ='password'/>\n                </Form.Item>\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                Register\n                </Button>\n                </Form.Item>\n                 Already have an account?<a onClick={renderLoginComponent}> Login</a>\n            </Form>\n        </div>\n    )\n}\n\nexport default Register","import React, {useState} from 'react'\n\nimport Login from './Login'\nimport Register from './Register'\n\nfunction Landing(props) {\n\n    const [loginShowing, setLoginShowing] = useState(true)\n\n    const switchView = () => {\n        console.log('here')\n        if (loginShowing === true) {\n            console.log('reached')\n            setLoginShowing(false)\n        } else {\n            setLoginShowing(true)\n        }\n    }\n\n    if (loginShowing) {\n        console.log('login showing')\n        return <Login switch={switchView}></Login>\n    } else {\n        console.log('register showing')\n        return <Register switch={switchView}></Register>\n    }\n}\n\nexport default Landing","import React, {useState, useEffect} from 'react'\n\nimport {Button, List} from 'antd'\n\nimport { getUserInformation } from '../utility'\n\nconst data = [{title: 'Hangman', link: '/hangmanLobby'}]\n\nfunction Games(props) {\n\n    const [username, setUsername] = useState()\n    const [games, setGames] = useState(data)\n\n    useEffect(() => {\n        getUserInformation.then(data => setUsername(data.username))\n    },[])\n\n    return (\n        <div>\n            <h1 style= {{textAlign: 'center'}}>{'Welcome ' + username}</h1>\n            <h2 style= {{textAlign: 'center'}}>Play some of our games!</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {games}\n                renderItem = {(item) => (\n                    <List.Item\n                    actions={[\n                        <Button onClick={() => props.history.push(item.link)}>Play</Button>, \n                ]}\n                    >\n                        <List.Item.Meta\n                            title = {<h3>{item.title}</h3>}\n                        />\n                    </List.Item>\n                )}\n            >\n\n            </List>\n            <p style= {{textAlign: 'center'}}>More games coming soon!</p>\n        </div>\n    )\n}\n\nexport default Games","import React from 'react';\nimport {Route, Switch} from 'react-router-dom'\nimport { withRouter } from 'react-router-dom';\n\nimport Navbar from './views/Navbar'\nimport HangmanLobby from './views/HangmanLobby'\nimport Game from './views/Game'\nimport Profile from './views/Profile'\nimport Landing from './views/Landing'\nimport Games from './views/Games'\n\nimport { landingRoute, gamesRoute, hangmanLobbyRoute,\n  hangmanGameRoute, profileRoute } from './constants'\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n        <Navbar/>\n      <Switch>\n        <Route exact path = {landingRoute} component = {Landing}/>\n        <Route exact path = {gamesRoute} component = {Games}/>\n        <Route exact path = {hangmanLobbyRoute} component = {HangmanLobby} />\n        <Route exact path = {hangmanGameRoute} component = {Game} />\n        <Route exact path = {profileRoute} component = {Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}