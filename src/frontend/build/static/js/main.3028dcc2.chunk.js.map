{"version":3,"sources":["views/Navbar.js","views/HangmanLobby.js","views/Game.js","context.js","views/Profile.js","views/Login.js","views/Register.js","views/Landing.js","views/Games.js","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","accessToken","localStorage","getItem","logout","setItem","history","push","ConditionalLoggedIn","isLoggedIn","style","margin","fontSize","align","span","href","offset","onClick","position","right","top","Option","Select","HangmanLobby","config","headers","useState","hangmanPoints","setPoints","currentGames","setCurrentGames","pastGames","setPastGames","difficultyLevel","setDifficultyLevel","useEffect","axios","get","then","response","console","log","data","catch","error","formatGame","game_id","formatDescription","item","wrong_moves","word_attempt","map","val","join","formatEndDescription","word","textAlign","padding","border","borderRadius","itemLayout","dataSource","renderItem","Item","actions","pathname","state","Meta","title","description","showSearch","width","placeholder","optionFilterProp","onChange","value","onFocus","onBlur","onSearch","filterOption","input","option","children","toLowerCase","indexOf","post","difficulty_level","includes","outcomeOf","alph","split","Game","location","setData","guess","setGuess","available","lett","li","filter","el","fix","guessed_letters","finished","gutter","className","index","letter","err","marginTop","status","subTitle","extra","type","key","UserContext","React","createContext","access","setAccess","Provider","Consumer","Profile","useContext","Login","name","initialValues","remember","onFinish","values","username","password","message","success","login","rules","required","prefix","UserOutlined","LockOutlined","valuePropName","noStyle","htmlType","switch","Register","hasFeedback","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","Landing","loginShowing","setLoginShowing","switchView","link","Games","setUsername","games","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8QAuEeA,mBAnEf,SAAgBC,GACZ,IAAMC,EAAcC,aAAaC,QAAQ,eAOnCC,EAAS,WACXF,aAAaG,QAAQ,cAAe,IACpCL,EAAMM,QAAQC,KAAK,MASjBC,EAAsB,SAACR,GAEzB,OADmBA,EAAMS,WAGjB,yBAAKC,MAAS,CACVC,OAAQ,OACRC,SAAU,SAEV,kBAAC,IAAD,CAAKC,MAAM,UACzB,kBAAC,IAAD,CAAKC,KAAM,GAAG,uBAAGC,KAAK,UAAR,UACd,kBAAC,IAAD,CAAKD,KAAM,EAAGE,OAAQ,IACtB,uBAAGC,QAAWb,GAAd,aAUM,yBAAKM,MAAS,CACVQ,SAAU,QACVC,MAAO,OACPC,IAAK,UAQjB,OACI,6BACI,kBAACZ,EAAD,CAAqBC,WAjDL,KAAhBR,GAiDA,S,mDCtDJoB,EAAWC,IAAXD,OAkLOE,MAjLf,SAAsBvB,GAClB,IAAMC,EAAcC,aAAaC,QAAQ,eAEnCqB,EAAS,CACXC,QAAS,CACL,cAAgB,OAAhB,OAAwBxB,KALP,EAQUyB,mBAAS,GARnB,mBAQlBC,EARkB,KAQHC,EARG,OASeF,qBATf,mBASlBG,EATkB,KASJC,EATI,OAUSJ,qBAVT,mBAUlBK,EAVkB,KAUPC,EAVO,OAWqBN,qBAXrB,mBAWlBO,EAXkB,KAWDC,EAXC,KA2BzBC,qBAAU,WACNC,IAAMC,IAAI,iCAAkCb,GAAQc,MAAK,SAAAC,GACrDC,QAAQC,IAAIF,EAASG,MACrBZ,EAAgBS,EAASG,SAE1BC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,MAC9BR,IAAMC,IAAI,6CAA8Cb,GAAQc,MAAK,SAAAC,GACjEC,QAAQC,IAAIF,EAASG,MACzBV,EAAaO,EAASG,SACnBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,MAC9BR,IAAMC,IAAI,2CAA4Cb,GAAQc,MAAK,SAAAC,GAC3DC,QAAQC,IAAIF,EAASG,MACrBd,EAAUW,EAASG,SACpBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QACpC,IAGF,IA+BMC,EAAa,SAACC,GAChB,MAAO,QAAUA,GAafC,EAAoB,SAACC,GAGvB,MAAO,gBAFO,EAAIA,EAAKC,aAES,eADAD,EAAKE,aAXZC,KAAI,SAAAC,GAC3B,MAAY,KAARA,EACK,IAEAA,KAEAC,KAAK,QASdC,EAAuB,SAACN,GAE1B,MAAO,SADMA,EAAKO,MAItB,OACI,6BACI,wBAAI7C,MAAS,CAAC8C,UAAW,WAAzB,gBACA,wBAAI9C,MAAQ,CAAC8C,UAAW,WAAY,kBAAoB7B,GACxD,yBAAKjB,MAAQ,CAAC8C,UAAW,YAEzB,wBAAI9C,MAAQ,CAAC8C,UAAW,WAAxB,iBACA,kBAAC,IAAD,CACI9C,MAAS,CACLC,OAAQ,oBACR8C,QAAS,OACTC,OAAQ,iBACRC,aAAa,OAEjBC,WAAa,aACbC,WAAchC,EACdiC,WAAc,SAACd,GAAD,OACV,kBAAC,IAAKe,KAAN,CACAC,QAAS,CACL,kBAAC,IAAD,CAAQ/C,QAAS,kBA3ExB,SAAC+B,GACVhD,EAAMM,QAAQC,KAAK,CACf0D,SAAU,QACVC,MAAO,CACHxB,KAAMM,KAuEyBK,CAAKL,KAA5B,sBAGA,kBAAC,IAAKe,KAAKI,KAAX,CACIC,MAAS,2BAAIvB,EAAWG,EAAKF,UAC7BuB,YAAe,2BAAItB,EAAkBC,UAOrD,yBAAKtC,MAAQ,CAAC8C,UAAW,WACzB,kBAAC,IAAD,CACRc,YAAU,EACV5D,MAAO,CAAE6D,MAAO,KAChBC,YAAY,0BACZC,iBAAiB,WACjBC,SA7HA,SAAkBC,GACdzC,EAAmByC,IA6HvBC,QAtHE,WACEpC,QAAQC,IAAI,UAsHhBoC,OA3HE,WACErC,QAAQC,IAAI,SA2HhBqC,SApHE,SAAkB1B,GAChBZ,QAAQC,IAAI,UAAWW,IAoH3B2B,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,IAG5D,kBAAC9D,EAAD,CAAQsD,MAAM,KAAd,KACA,kBAACtD,EAAD,CAAQsD,MAAM,KAAd,KACA,kBAACtD,EAAD,CAAQsD,MAAM,KAAd,MAEN,kBAAC,IAAD,CAAQ1D,QAhGe,WACjBmB,IAAMiD,KAAK,iCAAkC,CACzCC,iBAAkBrD,GACnBT,GAAQc,MAAK,SAAAC,GACZC,QAAQC,IAAIF,EAASG,MACrB1C,EAAMM,QAAQC,KAAK,CACf0D,SAAU,QACVC,MAAO,CACHxB,KAAMH,EAASG,WAGxBC,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAqFpC,+BACA,sEAEU,wBAAIlC,MAAQ,CAAC8C,UAAW,WAAxB,cACA,kBAAC,IAAD,CACI9C,MAAS,CACLC,OAAQ,oBACR8C,QAAS,OACTC,OAAQ,iBACRC,aAAa,OAEjBC,WAAa,aACbC,WAAc9B,EACd+B,WAAc,SAACd,GAAD,OACV,kBAAC,IAAKe,KAAN,KAEI,kBAAC,IAAKA,KAAKI,KAAX,CACIC,MAAS,2BAAIvB,EAAWG,EAAKF,UAC7BuB,YAAe,2BAAIf,EAAqBN,MAE5C,2BAtGF,SAACA,GACf,OAAIA,EAAKE,aAAaqC,SAAS,IACpB,OAEA,MAkGSC,CAAUxC,U,SC1K9B3B,EAAWC,IAAXD,OAEFoE,EAAO,6BAA6BC,MAAM,IAoIjCC,MAlIf,SAAc3F,GACV,IAAMC,EAAcC,aAAaC,QAAQ,eAEnCqB,EAAS,CACXC,QAAS,CACL,cAAgB,OAAhB,OAAwBxB,KALf,EA2BOyB,mBAAS1B,EAAM4F,SAAS1B,MAAMxB,MA3BrC,mBA2BVA,EA3BU,KA2BJmD,EA3BI,OA4BSnE,qBA5BT,mBA4BVoE,EA5BU,KA4BHC,EA5BG,KA6BbC,EANQ,SAACC,GACT,IAAMC,EAAKD,EAAKP,MAAM,IACtB,OAAOD,EAAKU,QAAQ,SAAEC,GAAF,OAAWF,EAAGX,SAAUa,MAIhCC,CAAI3D,EAAK4D,iBAqCzB,MAAsB,OAAlB5D,EAAK6D,UACP/D,QAAQC,IAAI,MAEV,6BACI,wBAAI/B,MAAS,CAAC8C,UAAW,WAAY,QAAUd,EAAKI,SACpD,yBAAKpC,MAAS,CAAC8C,UAAW,WAC1B,kBAAC,IAAD,CAAKgD,OAAQ,IACb,kBAAC,IAAD,CAAKC,UAAU,aAAa3F,KAAM,EAAGE,OAAQ,GAC7C,2BAAI,oBAA4C0B,EAAK4D,gBAVpCZ,MAAM,IAAIrC,KAAK,QAYhC,kBAAC,IAAD,CAAKoD,UAAU,aAAa3F,KAAM,GAClC,4BAAK,gBAAkB,EAAI4B,EAAKO,iBAIhC,wBAAIvC,MAAS,CAAC8C,UAAW,WAA2Bd,EAAKQ,aA1BtCC,KAAI,SAAAC,GAC3B,MAAY,KAARA,EACK,IAEAA,KAEAC,KAAK,QAqBV,yBAAK3C,MAAS,CAAC8C,UAAW,WAC1B,kBAAC,IAAD,CACRc,YAAU,EACV5D,MAAO,CAAE6D,MAAO,KAChBC,YAAY,iBACZC,iBAAiB,WACjBC,SAhFA,SAAkBC,GACdoB,EAASpB,IAgFbC,QAzEE,WACEpC,QAAQC,IAAI,UAyEhBoC,OA9EE,WACErC,QAAQC,IAAI,SA8EhBqC,SAvEE,SAAkB1B,GAChBZ,QAAQC,IAAI,UAAWW,IAuE3B2B,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASC,cAAcC,QAAQJ,EAAMG,gBAAkB,IAG/Da,EAAU7C,KAAI,SAACC,EAAKsD,GACjB,OACI,kBAAC,EAAD,CAAQ/B,MAAOvB,GAAMA,OAI/B,kBAAC,IAAD,CAAQnC,QAvDc,WAChB,IAAM6B,EAAU9C,EAAM4F,SAAS1B,MAAMxB,KAAKI,QAC1CV,IAAMiD,KAAN,wCAA4CvC,EAA5C,iBAAoE,CAAC6D,OAAQb,GAAOtE,GAAQc,MAAK,SAAAC,GAC7FC,QAAQC,IAAIF,EAASG,MACrBmD,EAAQtD,EAASG,SAClBC,OAAM,SAAAiE,GAAG,OAAIpE,QAAQC,IAAImE,QAkDlC,gBACA,yBAAKlG,MAAS,CAAC8C,UAAW,SAAUqD,UAAW,SAC/C,kBAAC,IAAD,CAAQ5F,QA1EO,WACTjB,EAAMM,QAAQC,KAAK,mBAyEzB,8BAOIiC,QAAQC,IAAI,OAEZ,kBAAC,IAAD,CACFqE,OAhFMpE,EAAKQ,aAAaqC,SAAS,IACtB,QAEA,UA8EXnB,MA1EM1B,EAAKQ,aAAaqC,SAAS,IACtB,kCAEA,yBAwEXwB,SAAS,GACTC,MAAO,CACL,kBAAC,IAAD,CAAQ/F,QAAS,kBAAMjB,EAAMM,QAAQC,KAAK,kBAAkB0G,KAAK,UAAUC,IAAI,WAA/E,mBAGA,kBAAC,IAAD,CAAQjG,QAAS,kBAAMjB,EAAMM,QAAQC,KAAK,YAA1C,2BC9HA4G,EAAcC,IAAMC,cAAc,CACpCC,OAAQ,GACRC,UAAW,eAMAJ,GAHaA,EAAYK,SACZL,EAAYM,SAEzBN,GCyBAO,MA5Bf,WACwBxH,aAAaC,QAAQ,eAAzC,IAEOmH,EAAUK,qBAAWR,GAArBG,OAED9F,EAAS,CACXC,QAAS,CACT,cAAgB,OAAhB,OAAwB6F,KAa5B,OACI,6BACI,kBAAC,IAAD,CAAQrG,QAZO,WACnBmB,IAAMC,IAAI,uCAAwCb,GAAQc,MAAK,SAAAC,GAC3DC,QAAQC,IAAIF,MACbI,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAS1B,qBACA,kBAAC,IAAD,CAAQ3B,QAPE,WACduB,QAAQC,IAAI6E,KAMR,kB,+DC2DGM,MAlFf,SAAe5H,GACZ,IAAMC,EAAcC,aAAaC,QAAQ,eAuBxC,MAnBkB,OAAhB,OAAwBF,GAoBtB,yBAAKS,MAAS,CAACC,OAAQ,oBACvB,gDACA,kBAAC,IAAD,CACIkH,KAAK,eACLpB,UAAU,aACVqB,cAAe,CACXC,UAAU,GAEdC,SAxBQ,SAACC,GACb7F,IAAMiD,KAAK,yCAA0C,CACjD6C,SAAUD,EAAOC,SACjBC,SAAUF,EAAOE,WAChB7F,MACD,SAAAC,GACIrC,aAAaG,QAAQ,cAAekC,EAASG,KAAK4E,QAClDpH,aAAaG,QAAQ,cAAc,GACnCmC,QAAQC,IAAIF,GACZ6F,IAAQC,QAAQ,2BAChBrI,EAAMsI,WAEP3F,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAcpC,kBAAC,IAAKmB,KAAN,CACE8D,KAAK,WACLU,MAAO,CACL,CACEC,UAAU,EACVJ,QAAS,iCAIb,kBAAC,IAAD,CAAOK,OAAQ,kBAACC,EAAA,EAAD,CAAcjC,UAAU,wBAA0BjC,YAAY,cAE/E,kBAAC,IAAKT,KAAN,CACE8D,KAAK,WACLU,MAAO,CACL,CACEC,UAAU,EACVJ,QAAS,iCAIb,kBAAC,IAAD,CACEK,OAAQ,kBAACE,EAAA,EAAD,CAAclC,UAAU,wBAChCQ,KAAK,WACLzC,YAAY,cAGhB,kBAAC,IAAKT,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAW8D,KAAK,WAAWe,cAAc,UAAUC,SAAO,GACxD,kBAAC,IAAD,sBAQJ,kBAAC,IAAK9E,KAAN,KACE,kBAAC,IAAD,CAAQkD,KAAK,UAAU6B,SAAS,SAASrC,UAAU,qBAAnD,UADF,MAIK,uBAAGxF,QAASjB,EAAM+I,QAAlB,qBCcIC,MA1Ff,SAAkBhJ,GAyBd,OACI,yBAAKU,MAAS,CAACC,OAAQ,oBACnB,8CACA,kBAAC,IAAD,CACAkH,KAAK,kBACLpB,UAAU,gBACVqB,cAAe,CACXC,UAAU,GAEdC,SAhCW,SAACC,GAChB7F,IAAMiD,KAAK,oCAAqC,CAC5C6C,SAAUD,EAAOC,SACjBC,SAAUF,EAAOE,WAChB7F,MACD,SAAAC,GACIC,QAAQC,IAAIF,MAGbD,MAAK,WACJF,IAAMiD,KAAK,yCAA0C,CACzD6C,SAAUD,EAAOC,SACjBC,SAAUF,EAAOE,WACd7F,MACH,SAAAC,GACIrC,aAAaG,QAAQ,cAAekC,EAASG,KAAK4E,QAClDpH,aAAaG,QAAQ,cAAc,GACnCmC,QAAQC,IAAIF,GACZvC,EAAMsI,cAEP3F,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAa1B,kBAAC,IAAKmB,KAAN,CACI8D,KAAK,WACLU,MAAO,CACP,CACIC,UAAU,EACVJ,QAAS,4BAIb,kBAAC,IAAD,CAAOK,OAAQ,kBAACC,EAAA,EAAD,CAAcjC,UAAU,wBAA0BjC,YAAY,qBAEjF,kBAAC,IAAKT,KAAN,CACI8D,KAAO,WACPoB,aAAW,EACXV,MAAS,CACT,CACIC,UAAU,EACVJ,QAAS,4BAIb,kBAAC,IAAD,CAAOK,OAAQ,kBAACE,EAAA,EAAD,CAAclC,UAAU,wBAA0BjC,YAAY,WAAWyC,KAAM,cAElG,kBAAC,IAAKlD,KAAN,CACI8D,KAAO,kBACPqB,aAAgB,CAAC,YACjBD,aAAW,EACXV,MAAS,CACT,CACIC,UAAU,EACVJ,QAAS,0BAEb,gBAAEe,EAAF,EAAEA,cAAF,MAAsB,CAClBC,UADkB,SACRC,EAAM1E,GACZ,OAAKA,GAASwE,EAAc,cAAgBxE,EAGrC2E,QAAQC,OAAO,iCAFXD,QAAQE,eAO3B,kBAAC,IAAD,CAAOf,OAAQ,kBAACE,EAAA,EAAD,CAAclC,UAAU,wBAA0BjC,YAAY,mBAAmByC,KAAM,cAE1G,kBAAC,IAAKlD,KAAN,KACA,kBAAC,IAAD,CAAQkD,KAAK,UAAU6B,SAAS,SAASrC,UAAU,wBAAnD,aApDJ,2BAwD6B,uBAAGxF,QAASjB,EAAM+I,QAAlB,aCvD1BU,MA3Bf,SAAiBzJ,GAAQ,IAAD,EAEoB0B,oBAAS,GAF7B,mBAEbgI,EAFa,KAECC,EAFD,KAIdC,EAAa,WACfpH,QAAQC,IAAI,SACS,IAAjBiH,GACAlH,QAAQC,IAAI,WACZkH,GAAgB,IAEhBA,GAAgB,IAIlBrB,EAAQ,WACVtI,EAAMM,QAAQC,KAAK,WAGvB,OAAImJ,GACAlH,QAAQC,IAAI,iBACL,kBAAC,EAAD,CAAO6F,MAAOA,EAAOS,OAAQa,MAEpCpH,QAAQC,IAAI,oBACL,kBAAC,EAAD,CAAU6F,MAAOA,EAAOS,OAAQa,MC1BzClH,EAAO,CAAC,CAAC0B,MAAO,UAAWyF,KAAM,kBAsDxBC,MApDf,SAAe9J,GAEX,IAAMC,EAAcC,aAAaC,QAAQ,eAEnCqB,EAAS,CACXC,QAAS,CACL,cAAgB,OAAhB,OAAwBxB,KANd,EAScyB,qBATd,mBASXwG,EATW,KASD6B,EATC,OAUQrI,mBAASgB,GAVjB,mBAUXsH,EAVW,KAoBlB,OApBkB,KAYlB7H,qBAAU,WACNC,IAAMC,IAAI,uCAAwCb,GAAQc,MAAK,SAAAC,GAC3DC,QAAQC,IAAIF,EAASG,MACrBqH,EAAYxH,EAASG,KAAKwF,aAE3BvF,OAAM,SAAAC,GAAK,OAAIJ,QAAQC,IAAIG,QAChC,IAGE,6BACI,wBAAIlC,MAAQ,CAAC8C,UAAW,WAAY,WAAa0E,GACjD,wBAAIxH,MAAQ,CAAC8C,UAAW,WAAxB,2BACA,kBAAC,IAAD,CACI9C,MAAS,CACLC,OAAQ,oBACR8C,QAAS,OACTC,OAAQ,iBACRC,aAAa,OAEjBC,WAAa,aACbC,WAAcmG,EACdlG,WAAc,SAACd,GAAD,OACV,kBAAC,IAAKe,KAAN,CACAC,QAAS,CACL,kBAAC,IAAD,CAAQ/C,QAAS,kBAAMjB,EAAMM,QAAQC,KAAKyC,EAAK6G,QAA/C,UAGA,kBAAC,IAAK9F,KAAKI,KAAX,CACIC,MAAS,4BAAKpB,EAAKoB,aAOnC,uBAAG1D,MAAQ,CAAC8C,UAAW,WAAvB,6BCxBGzD,mBAlBf,SAAaC,GAEX,OACE,yBAAKyG,UAAU,OAEX,kBAAC,EAAD,MAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwD,OAAK,EAACC,KAAO,IAAIC,UAAaV,IACrC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAO,SAASC,UAAaL,IAC1C,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAO,gBAAgBC,UAAa5I,IACjD,kBAAC,IAAD,CAAO0I,OAAK,EAACC,KAAO,QAAQC,UAAaxE,IACzC,kBAAC,IAAD,CAAOsE,OAAK,EAACC,KAAO,WAAWC,UAAazC,SCZhC0C,QACW,cAA7BC,OAAOzE,SAAS0E,UAEe,UAA7BD,OAAOzE,SAAS0E,UAEhBD,OAAOzE,SAAS0E,SAASC,MACvB,2D,YCXNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxI,MAAK,SAAAyI,GACJA,EAAaC,gBAEdrI,OAAM,SAAAC,GACLJ,QAAQI,MAAMA,EAAMwF,c","file":"static/js/main.3028dcc2.chunk.js","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router-dom';\nimport {Row, Col} from 'antd'\n\nfunction Navbar(props) {\n    const accessToken = localStorage.getItem('accessToken')\n\n   const isLoggedIn = () => {\n        if (accessToken === '') return false\n        return true\n    }\n\n    const logout = () => {\n        localStorage.setItem('accessToken', '')\n        props.history.push('/')\n    }\n\n    // style = {{\n    //     position: 'fixed', \n    //     right: '25px',\n    //     top: '3px'\n    //     }}\n\n    const ConditionalLoggedIn = (props) => {\n        const isLoggedIn = props.isLoggedIn\n        if (isLoggedIn) {\n            return (\n                <div style = {{\n                    margin: '1rem',\n                    fontSize: '15px'\n                    }}>\n                    <Row align='middle'>\n      <Col span={8}><a href='/games'>Games</a></Col>\n      <Col span={2} offset={14}>\n      <a onClick = {logout} >Logout</a>\n      </Col>\n    </Row>\n                \n                \n            </div>\n            )\n        }\n        else \n        return (\n            <div style = {{\n                position: 'fixed', \n                right: '25px',\n                top: '3px'\n                }}>\n                {/* <a href = './login'>Login</a>\n                <a href = './register'> Register</a> */}\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <ConditionalLoggedIn isLoggedIn = {isLoggedIn()}> </ConditionalLoggedIn>\n        </div>\n        // <nav style = {{\n        //     position: 'fixed',\n        //     height: '40px',\n        //     width: '100%'\n        //     }}>\n        //     {/* <Menu mode = 'horizontal'> */}\n        //         <ConditionalLoggedIn isLoggedIn = {isLoggedIn()}> </ConditionalLoggedIn>\n        //     {/* </Menu> */}\n        //  </nav>\n    )\n}\n\nexport default withRouter(Navbar)","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {List,Button, Select} from 'antd'\nconst { Option } = Select;\nfunction HangmanLobby(props) {\n    const accessToken = localStorage.getItem('accessToken')\n \n    const config = {\n        headers: {\n            'Authorization': `JWT ${accessToken}`\n        }\n    }\n    const [hangmanPoints, setPoints] = useState(0)\n    const [currentGames, setCurrentGames] = useState()\n    const [pastGames, setPastGames] = useState()\n    const [difficultyLevel, setDifficultyLevel] = useState()\n    function onChange(value) {\n        setDifficultyLevel(value)\n      }\n      \n      function onBlur() {\n        console.log('blur');\n      }\n      \n      function onFocus() {\n        console.log('focus');\n      }\n      \n      function onSearch(val) {\n        console.log('search:', val);\n      }\n    useEffect(() => {\n        axios.get('http://127.0.0.1:8000/hangman/', config).then(response => {\n            console.log(response.data)\n            setCurrentGames(response.data)\n            // setPastGames(response.data.filter(val => val.finished == 'yes'))\n        }).catch(error => console.log(error))\n        axios.get('http://127.0.0.1:8000/hangman/getFinished/', config).then(response => {\n            console.log(response.data)\n        setPastGames(response.data)\n        }).catch(error => console.log(error))\n        axios.get('http://127.0.0.1:8000/hangman/getPoints/', config).then(response => {\n                console.log(response.data)\n                setPoints(response.data)\n            }).catch(error => console.log(error))\n    },[])\n\n   \n    const join = (item) => {\n        props.history.push({\n            pathname: '/game',\n            state: {\n                data: item\n            }\n        })\n    }\n\n    const startNewGame = () => {\n        axios.post('http://127.0.0.1:8000/hangman/', {\n            difficulty_level: difficultyLevel\n        }, config).then(response => {\n            console.log(response.data)\n            props.history.push({\n                pathname: '/game',\n                state: {\n                    data: response.data\n                }\n            })\n        }).catch(error => console.log(error))\n    }\n\n    const outcomeOf = (item) => {\n        if (item.word_attempt.includes('')) {\n            return 'LOST'\n        } else {\n            return 'WON'\n        }\n    }\n\n    const formatGame = (game_id) => {\n        return \"Game \" + game_id\n    }\n\n    const displayAttempt = (word_attempt) => {\n        const pre = word_attempt.map(val => {\n          if (val === '')\n            return '_'\n          else\n            return val\n        })\n        return pre.join('   ')\n      }\n\n    const formatDescription = (item) => {\n        const lives = 6 - item.wrong_moves\n        const progress = displayAttempt(item.word_attempt)\n        return 'Lives Left: ' + lives + ', Progress: ' + progress\n    }\n\n    const formatEndDescription = (item) => {\n        const word = item.word\n        return 'word: ' + word\n    }\n\n    return (\n        <div>\n            <h1 style = {{textAlign: 'center'}}>Play Hangman</h1>\n            <h3 style= {{textAlign: 'center'}}>{'Points Earned: ' + hangmanPoints}</h3>\n            <div style= {{textAlign: 'center'}}>\n            </div>\n            <h2 style= {{textAlign: 'center'}}>Current Games</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {currentGames}\n                renderItem = {(item) => (\n                    <List.Item\n                    actions={[\n                        <Button onClick={() => join(item)}>Continue Playing</Button>, \n                ]}\n                    >\n                        <List.Item.Meta\n                            title = {<p>{formatGame(item.game_id)}</p>}\n                            description = {<p>{formatDescription(item)}</p>}\n                        />\n                    </List.Item>\n                )}\n            >\n\n            </List>\n            <div style= {{textAlign: 'center'}}>\n            <Select\n    showSearch\n    style={{ width: 200 }}\n    placeholder=\"Choose Difficulty Level\"\n    optionFilterProp=\"children\"\n    onChange={onChange}\n    onFocus={onFocus}\n    onBlur={onBlur}\n    onSearch={onSearch}\n    filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  >\n        <Option value='1'>1</Option>\n        <Option value='2'>2</Option>\n        <Option value='3'>3</Option>\n  </Select>\n  <Button onClick={startNewGame}>Start New Singleplayer Game</Button>\n  <p>Multiplayer Functionality Coming Soon!</p>\n  </div>\n            <h2 style= {{textAlign: 'center'}}>Past Games</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {pastGames}\n                renderItem = {(item) => (\n                    <List.Item\n                    >\n                        <List.Item.Meta\n                            title = {<p>{formatGame(item.game_id)}</p>}\n                            description = {<p>{formatEndDescription(item)}</p>}\n                        />\n                        <p>{outcomeOf(item)}</p>\n                    </List.Item>\n                )}\n            >\n            </List>\n        </div>\n    )\n}\nexport default HangmanLobby","import React, {useState} from 'react'\nimport axios from 'axios'\nimport { Select, Row, Col, Result, Button } from 'antd';\nconst { Option } = Select;\n\nconst alph = 'abcdefghijklmnopqrstuvwxyz'.split('')\n\nfunction Game(props) {\n    const accessToken = localStorage.getItem('accessToken')\n\n    const config = {\n        headers: {\n            'Authorization': `JWT ${accessToken}`\n        }\n    }\n    function onChange(value) {\n        setGuess(value)\n      }\n      \n      function onBlur() {\n        console.log('blur');\n      }\n      \n      function onFocus() {\n        console.log('focus');\n      }\n      \n      function onSearch(val) {\n        console.log('search:', val);\n      }\n    const fix = (lett) => {\n        const li = lett.split('')\n        return alph.filter( ( el ) => !li.includes( el ) );\n    }\n    const [data, setData] = useState(props.location.state.data)\n    const [guess, setGuess] = useState()\n    let available = fix(data.guessed_letters)\n    const back = () => {\n        props.history.push('/hangmanLobby')\n    }\n    const calcStatus = () => {\n      if (data.word_attempt.includes('')) {\n        return 'error'\n      } else {\n        return 'success'\n      }\n    }\n    const calcTitle = () => {\n      if (data.word_attempt.includes('')) {\n        return 'You should read a dictionary :('\n      } else {\n        return 'Congratulations...nerd'\n      }\n    }\n    const submitGuess = () => {\n        const game_id = props.location.state.data.game_id\n        axios.post(`http://127.0.0.1:8000/hangman/${game_id}/guessLetter/`, {letter: guess},config).then(response => {\n            console.log(response.data)\n            setData(response.data)\n        }).catch(err => console.log(err))\n    }\n    const displayAttempt = (word_attempt) => {\n      const pre = word_attempt.map(val => {\n        if (val === '')\n          return '_'\n        else\n          return val\n      })\n      return pre.join('   ')\n    }\n    const displayGuessedLetters = (guessed_letters) => {\n      return guessed_letters.split('').join(', ')\n    }\n    if (data.finished === 'no') {\n      console.log('no')\n    return (\n        <div>\n            <h1 style = {{textAlign: 'center'}}>{'Game ' + data.game_id}</h1>\n            <div style = {{textAlign: 'center'}}>\n            <Row gutter={16}>\n            <Col className=\"gutter-row\" span={4} offset={8}>\n            <p>{'Guessed Letters: ' + displayGuessedLetters(data.guessed_letters)}</p>\n            </Col>\n            <Col className=\"gutter-row\" span={4}>\n            <h4>{'Lives Left: ' + (6 - data.wrong_moves)}</h4>\n            </Col>\n            </Row>\n            </div>\n            <h1 style = {{textAlign: 'center'}}>{displayAttempt(data.word_attempt)}</h1>\n            <div style = {{textAlign: 'center'}}>\n            <Select\n    showSearch\n    style={{ width: 200 }}\n    placeholder=\"Guess a Letter\"\n    optionFilterProp=\"children\"\n    onChange={onChange}\n    onFocus={onFocus}\n    onBlur={onBlur}\n    onSearch={onSearch}\n    filterOption={(input, option) =>\n      option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n    }\n  >\n    {available.map((val, index) => {\n        return (\n            <Option value={val}>{val}</Option>\n        )\n    })}\n  </Select>\n  <Button onClick={submitGuess}>Submit Guess</Button>\n  <div style = {{textAlign: 'center', marginTop: '30px'}}>\n  <Button onClick={back}>Back to Hangman Lobby</Button>\n  </div>\n        </div>\n        </div>\n    )}\n\n    else {\n      console.log('yes')\n      return (\n      <Result\n    status={calcStatus()}\n    title={calcTitle()}\n    subTitle=\"\"\n    extra={[\n      <Button onClick={() => props.history.push('/hangmanLobby')} type=\"primary\" key=\"console\">\n        Return To Lobby\n      </Button>,\n      <Button onClick={() => props.history.push('/games')}>\n        Browse Other Games\n      </Button>\n    ]}\n  ></Result>\n      )\n    }\n}\n\nexport default Game","import React from 'react'\n\nconst UserContext = React.createContext({\n    access: '',\n    setAccess: () => {}\n})\n\nexport const UserProvider = UserContext.Provider\nexport const UserConsumer = UserContext.Consumer\n\nexport default UserContext","import React, {useContext} from 'react';\nimport axios from 'axios'\n\nimport {Button} from 'antd'\n\nimport UserContext from '../context'\n\nfunction Profile() {\n    const accessToken = localStorage.getItem('accessToken')\n\n    const {access} = useContext(UserContext)\n\n    const config = {\n        headers: {\n        'Authorization': `JWT ${access}`\n        }\n    }\n    const changePassword = () => {\n        axios.get('http://127.0.0.1:8000/auth/users/me/', config).then(response => {\n            console.log(response)\n        }).catch(error => console.log(error))\n    }\n\n    const seeAccess = () => {\n        console.log(access)\n    }\n\n    return (\n        <div>\n            <Button onClick = {changePassword}> change password </Button>\n            <Button onClick = {seeAccess}> see Access </Button>\n        </div>\n    )\n}\n\nexport default Profile","import React from 'react';\n\nimport 'antd/dist/antd.css';\nimport { Form, Input, Button, Checkbox, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport axios from 'axios'\n\nfunction Login(props) {\n   const accessToken = localStorage.getItem('accessToken')\n\n  const config = {\n    headers: {\n      'Authorization': `JWT ${accessToken}`,\n    }\n  }\n\n    const onLogin = (values) => {\n        axios.post('http://127.0.0.1:8000/auth/jwt/create/', {\n            username: values.username,\n            password: values.password\n          }).then(\n            response => {\n                localStorage.setItem('accessToken', response.data.access)\n                localStorage.setItem('isLoggedIn', true)\n                console.log(response)\n                message.success('Successfully logged in!')\n                props.login()\n                \n            }).catch(error => console.log(error))\n      }\n\n    return (\n        <div style = {{margin: '100px 40% 100px'}}>\n        <h1>Login to GameHub</h1>\n        <Form\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onLogin}\n        >\n      <Form.Item\n        name=\"username\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Username!',\n          },\n        ]}\n      >\n        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n      </Form.Item>\n      <Form.Item\n        name=\"password\"\n        rules={[\n          {\n            required: true,\n            message: 'Please input your Password!',\n          },\n        ]}\n      >\n        <Input\n          prefix={<LockOutlined className=\"site-form-item-icon\" />}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Form.Item>\n      <Form.Item>\n        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        {/* <a className=\"login-form-forgot\" href=\"\">\n          Forgot password\n        </a> */}\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n          Log in\n        </Button>\n        Or <a onClick={props.switch}>register now!</a>\n      </Form.Item>\n    </Form>\n    </div>\n    )\n}\n\nexport default Login","import React from 'react'\nimport axios from 'axios'\n\nimport {Form, Input, Button, message} from 'antd'\nimport { UserOutlined, LockOutlined} from '@ant-design/icons';\n\nfunction Register(props) {\n\n    const onRegister = (values) => {\n        axios.post('http://127.0.0.1:8000/auth/users/', {\n            username: values.username,\n            password: values.password,\n          }).then(\n            response => {\n                console.log(response)\n                // message.success('Successfully registered!')\n                // props.history.push('/login')\n            }).then(() => {\n                axios.post('http://127.0.0.1:8000/auth/jwt/create/', {\n            username: values.username,\n            password: values.password\n            }).then(\n            response => {\n                localStorage.setItem('accessToken', response.data.access)\n                localStorage.setItem('isLoggedIn', true)\n                console.log(response)\n                props.login()\n            })\n            }).catch(error => console.log(error))\n    }\n    \n    return (\n        <div style = {{margin: '100px 40% 100px'}}>\n            <h1> Registration </h1>\n            <Form\n            name=\"normal_register\"\n            className=\"register-form\"\n            initialValues={{\n                remember: true,\n            }}\n            onFinish={onRegister}>\n                <Form.Item\n                    name=\"username\"\n                    rules={[\n                    {\n                        required: true,\n                        message: 'A username is required',\n                    },\n                    ]}\n                 >\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Create Username\" />\n                </Form.Item>\n                <Form.Item\n                    name = \"password\"\n                    hasFeedback\n                    rules = {[\n                    {\n                        required: true,\n                        message: 'A password is required'\n                    },\n                    ]}\n                >\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Password\" type ='password'/>\n                </Form.Item>\n                <Form.Item\n                    name = \"confirmpassword\"\n                    dependencies = {['password']}\n                    hasFeedback\n                    rules = {[\n                    {\n                        required: true,\n                        message: 'Re-enter your password'\n                    },\n                    ({getFieldValue}) => ({\n                        validator(rule, value) {\n                            if (!value || getFieldValue('password') === value) {\n                                return Promise.resolve()\n                            }\n                            return Promise.reject('Error: Passwords do not match')\n                        }\n                    })\n                    ]}\n                >\n                    <Input prefix={<LockOutlined className=\"site-form-item-icon\" />} placeholder=\"Confirm Password\" type ='password'/>\n                </Form.Item>\n                <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\" className=\"register-form-button\">\n                Register\n                </Button>\n                </Form.Item>\n                 Already have an account?<a onClick={props.switch}> Login</a>\n            </Form>\n        </div>\n    )\n}\n\nexport default Register","import React, {useState} from 'react'\nimport axios from 'axios'\nimport Login from './Login'\nimport Register from './Register'\n\nimport {Form, Input, Button, message} from 'antd'\nimport { UserOutlined, LockOutlined} from '@ant-design/icons';\n\nfunction Landing(props) {\n\n    const [loginShowing, setLoginShowing] = useState(true)\n\n    const switchView = () => {\n        console.log('here')\n        if (loginShowing === true) {\n            console.log('reached')\n            setLoginShowing(false)\n        } else {\n            setLoginShowing(true)\n        }\n    }\n\n    const login = () => {\n        props.history.push('/games')\n    }\n\n    if (loginShowing) {\n        console.log('login showing')\n        return <Login login={login} switch={switchView}></Login>\n    } else {\n        console.log('register showing')\n        return <Register login={login} switch={switchView}></Register>\n    }\n}\n\nexport default Landing","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nimport {Button, List} from 'antd'\n\nconst data = [{title: 'Hangman', link: '/hangmanLobby'}]\n\nfunction Games(props) {\n\n    const accessToken = localStorage.getItem('accessToken')\n \n    const config = {\n        headers: {\n            'Authorization': `JWT ${accessToken}`\n        }\n    }\n    const [username, setUsername] = useState()\n    const [games, setGames] = useState(data)\n\n    useEffect(() => {\n        axios.get('http://127.0.0.1:8000/auth/users/me/', config).then(response => {\n            console.log(response.data)\n            setUsername(response.data.username)\n            // setPastGames(response.data.filter(val => val.finished == 'yes'))\n        }).catch(error => console.log(error))\n    },[])\n\n    return (\n        <div>\n            <h1 style= {{textAlign: 'center'}}>{'Welcome ' + username}</h1>\n            <h2 style= {{textAlign: 'center'}}>Play some of our games!</h2>\n            <List\n                style = {{\n                    margin: '10px 10% 50px 10%', \n                    padding: '10px', \n                    border: '2px solid grey',\n                    borderRadius:'5px'\n                }}\n                itemLayout = 'horizontal'\n                dataSource = {games}\n                renderItem = {(item) => (\n                    <List.Item\n                    actions={[\n                        <Button onClick={() => props.history.push(item.link)}>Play</Button>, \n                ]}\n                    >\n                        <List.Item.Meta\n                            title = {<h3>{item.title}</h3>}\n                        />\n                    </List.Item>\n                )}\n            >\n\n            </List>\n            <p style= {{textAlign: 'center'}}>More games coming soon!</p>\n        </div>\n    )\n}\n\nexport default Games","import React, {useState} from 'react';\nimport './App.css';\n\nimport {Route, Switch} from 'react-router-dom'\nimport { withRouter } from 'react-router-dom';\n\nimport Navbar from './views/Navbar'\nimport HangmanLobby from './views/HangmanLobby'\nimport Game from './views/Game'\nimport Profile from './views/Profile'\nimport Landing from './views/Landing'\nimport Games from './views/Games'\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\"> */}\n        <Navbar/>\n      {/* </header> */}\n      <Switch>\n        <Route exact path = \"/\" component = {Landing}/>\n        <Route exact path = \"/games\" component = {Games}/>\n        <Route exact path = \"/hangmanLobby\" component = {HangmanLobby} />\n        <Route exact path = \"/game\" component = {Game} />\n        <Route exact path = \"/profile\" component = {Profile} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}